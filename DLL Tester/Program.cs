using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using RayTracerInterface;
namespace DLL_Tester {
	class Program {
		[DllImport("WPFDarkMode.dll")]
		static extern void init();
		[DllImport("WPFDarkMode.dll")]
		private static extern void apply(IntPtr hwnd);
		static void TestOnce(LibraryHandler.Renderer rend) {
			int scaling = 1;
			rend.Render(0, 16 * scaling, 9 * scaling);
			Console.WriteLine("Rendering");
			while (true) {
				Console.WriteLine("\r" + rend.Status);
				Thread.Sleep(200);
			}
		}
		static void TestTwice(LibraryHandler.Renderer rend) {
			int x = 16, y = 9;
			rend.Render(1, x, y);
			Console.WriteLine("Rendering");
			while (rend.Status != x) {
				Console.WriteLine("\r" + rend.Status);
				Thread.Sleep(200);
			}
			Thread.Sleep(200);
			Console.WriteLine("Redoing...");
			Thread.Sleep(200);
			rend.Render(1, x, y);
			Console.WriteLine("Rendering");
			Thread.Sleep(200);
			while (rend.Status != x) {
				Console.WriteLine("" + rend.Status);
				Thread.Sleep(200);
			}
			Console.WriteLine("Done");
		}
		void testDarkMode() {
			init();
			apply(Process.GetCurrentProcess().MainWindowHandle);
		}
		static void testV3(LibraryHandler.SceneBasedRenderer sbr) {
			sbr.Initialize3d();
			var scene = new Scene() {
				objects ={
					new Sphere() {
						Color = new Vanta( new Color(1.0, 0.0, 0.0)),
						Radius=1,
						Position=new Vec(0,0,-1.5)
					},
					new Sphere() {
						Color = new Vanta( new Color(0.0, 0.0, 1.0)),
						Radius=0.5,
						Position=new Vec(1,0,-1.5)
					}
				}
			};
			var ser = scene.Serialize();
			sbr.SetScene(ser);
			ser = Camera.SerializeThis(new PinholeCamera() {
				angle = Math.PI / 2,
				Position = new Vec(0, 0, 0),
				Background = new Background() { Color = new Color(0.5, 0.5, 0.5) }
			});
			sbr.SetCamera(ser);
			int width = 16 * 1;
			int height = 9 * 1;
			sbr.StartPreviewRender(width, height);
			while (sbr.Status != width) {
				//Console.WriteLine(sbr.Status);
				Task.Delay(250);
			}
			Console.WriteLine(sbr.SceneFile);
		}
		static void testKirby(LibraryHandler.SceneBasedRenderer sbr) {
			var _ = sbr.LibraryInfo;
			var x = sbr.OutputFiles;
			var __ = sbr.SuppportedClass;
			var ___ = sbr.SuppportedCams;
			var ____ = sbr.SceneFile;
			sbr.Initialize3d();
			Thread.Sleep(3000);
			sbr.SetScene("0!1&1|0,615686274509804|0,815686274509804|&0|0|-20|&!$0!0,5&0,866666666666667|0,0745098039215686|0,301960784313725|&-0,5|-1|-20|&!$0!0,5&0,866666666666667|0,0745098039215686|0,301960784313725|&0,7|-0,7|-21|&!$0!0,3&0,996078431372549|0,63921568627451|0,831372549019608|&-0,9|0|-19,5|&!$0!0,3&0,996078431372549|0,63921568627451|0,831372549019608|&1|0,4|-20|&!$0!0,1&1|1|1|&-0,06|0,2|-18,96|&!$0!0,1&1|1|1|&0,4|0,3|-18,99|&!$1!0,2&0,8|0,25|1|&0,0431372549019608|0,0431372549019608|0,0823529411764706|&-0,05|0,15|-19|&!$1!0,2&-0,8|-0,25|1|&0,0431372549019608|0,0431372549019608|0,0823529411764706|&-0,05|0,15|-19|&!$1!0,2&1|0,3|1|&0,0431372549019608|0,0431372549019608|0,0823529411764706|&0,43|0,26|-19|&!$1!0,3&0|1|1,5|&0,458823529411765|0,0235294117647059|0,0666666666666667|&0,2|-0,2|-19|&!$0!0,2&0,996078431372549|0,411764705882353|0,729411764705882|&-0,3|-0,06|-19,22|&!$0!0,18&0,996078431372549|0,411764705882353|0,729411764705882|&0,65|0,17|-19,46|&!$0!75&0,674509803921569|0,894117647058824|1|&-20|-20|-200|&!$1!5&0|1|0|&0,423529411764706|0,76078431372549|0,870588235294118|&0|-1,4|-20|&!$1!1,5&0|1|0|&0,168627450980392|0,6|0,741176470588235|&-0,7|-1,3999999|-20,4|&!$1!0,6&0|1|0|&0,141176470588235|0,501960784313725|0,615686274509804|&-0,8|-1,39998|-20,4|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-4|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-3|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-2|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-1|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&0|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&1|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&2|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&3|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&4|2|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-4|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-3|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-2|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-1|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&0|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&1|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&2|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&3|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&4|1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-4|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-3|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-2|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-1|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&0|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&1|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&2|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&3|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&4|0|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-4|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-3|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-2|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&-1|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&0|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&1|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&2|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&3|-1|-30|&!$0!0,2&0,611764705882353|0,835294117647059|0,92156862745098|&4|-1|-30|&!$");
			sbr.SetCamera("0.576470588235294|0.823529411764706|0.823529411764706|[0.3&0|0|0|&[");
			sbr.StartPreviewRender(160, 90);

		}
		static void Main() {
			var rend = LibraryHandler.TryLoadLib(@"..\..\..\x64\Release\Aufgabe4.dll");
			//TestOnce(rend);
			testKirby(rend as LibraryHandler.SceneBasedRenderer);
			while (true) Thread.Sleep(999);
		}
	}
}
