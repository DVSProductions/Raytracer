<Window x:Class="RayTracerInterface.Compass"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RayTracerInterface"
        mc:Ignorable="d" Background="{x:Null}" Opacity="0.85" x:Name="CompassWindow"
        Title="Compass" Height="100" Width="150" ResizeMode="NoResize" ShowInTaskbar="False" Topmost="True" AllowsTransparency="true" WindowStyle="None" IsTabStop="False">
	<Window.Resources>
		<Style TargetType="Button" x:Key="Arrow">
			<Setter Property="IsHitTestVisible" Value="True"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderBrush" Value="{x:Null}"/>
			<Setter Property="Background" Value="{x:Null}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button" >
						<ContentPresenter>
							<ContentPresenter.Content>
								<Label Background="{TemplateBinding Background}" Content="➤" Padding="0" FontSize="15" Foreground="{TemplateBinding Foreground}" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.523" >
									<Label.RenderTransform>
										<ScaleTransform ScaleY="2" ScaleX="2"/>
									</Label.RenderTransform>
								</Label>
							</ContentPresenter.Content>
						</ContentPresenter>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="true">
					<Setter Property="Foreground" Value="#FFA33030"/>
				</Trigger>
				<Trigger Property="IsPressed" Value="true">
					<Setter Property="Foreground" Value="{DynamicResource LightRed}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

	</Window.Resources>
	<Border Height="80" Width="104" MouseLeave="Window_MouseLeave"  CornerRadius="30" BorderBrush="{DynamicResource LightRed}" Background="{DynamicResource BGColor}" RenderTransformOrigin="0.5,0.5">
		<Grid x:Name="ButtonGrid" Margin="2" >
			<Button Click="Bottom_Click" Style="{DynamicResource Arrow}" VerticalAlignment="Bottom" HorizontalAlignment="Center">
				<Button.LayoutTransform>
					<RotateTransform Angle="90"/>
				</Button.LayoutTransform>
			</Button>
			<Button Click="Right_Click"  Style="{DynamicResource Arrow}" Margin="0,0,0,35" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
			<Button Click="Left_Click"   Style="{DynamicResource Arrow}" Margin="0,0,0,35" VerticalAlignment="Bottom" HorizontalAlignment="Left" >
				<Button.LayoutTransform>
					<RotateTransform Angle="180"/>
				</Button.LayoutTransform>
			</Button>
			<Button Click="BR_Click"     Style="{DynamicResource Arrow}" Margin="0" VerticalAlignment="Bottom" HorizontalAlignment="Right" >
				<Button.LayoutTransform>
					<RotateTransform Angle="45"/>
				</Button.LayoutTransform>
			</Button>
			<Button Click="BL_Click"     Style="{DynamicResource Arrow}" Margin="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" >
				<Button.LayoutTransform>
					<RotateTransform Angle="135"/>
				</Button.LayoutTransform>
			</Button>
		</Grid>
		<Border.Effect>
			<DropShadowEffect ShadowDepth="0" BlurRadius="20" RenderingBias="Quality">

			</DropShadowEffect>
		</Border.Effect>
		<Border.RenderTransform>
			<ScaleTransform x:Name="MyAnimatedScaleTransform" ScaleY="0.5" ScaleX="0.5"/>
		</Border.RenderTransform>
		<Border.Triggers>
			<EventTrigger RoutedEvent="Border.Loaded">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="(ScaleTransform.ScaleY)" Storyboard.TargetName="MyAnimatedScaleTransform" From="0.2" To="1" Duration="0:0:0.2">
							<DoubleAnimation.EasingFunction>
								<ExponentialEase EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
						<DoubleAnimation Storyboard.TargetProperty="(ScaleTransform.ScaleX)" Storyboard.TargetName="MyAnimatedScaleTransform" From="0.2" To="1" Duration="0:0:0.2">
							<DoubleAnimation.EasingFunction>
								<ExponentialEase EasingMode="EaseOut"/>
							</DoubleAnimation.EasingFunction>
						</DoubleAnimation>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Border.Triggers>
	</Border>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Window.Loaded">
			<BeginStoryboard>
				<Storyboard>
					<DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CompassWindow" From="0" To="0.85" Duration="0:0:0.2"/>
				</Storyboard>
			</BeginStoryboard>
		</EventTrigger>
	</Window.Triggers>
</Window>
